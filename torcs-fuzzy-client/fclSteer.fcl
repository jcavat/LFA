// fclAccel.fcl, réalisé par Grégoire Aubert et Joël Cavat
// En entrée, l'angle de la voiture par rapport à la route,
// la position de la voiture sur la route et la direction 
// (différence entre capteur avant droite et avant gauche)
// En sortie la direction à prendre

// Block definition (there may be more than one block per file)
FUNCTION_BLOCK accelFuzzyController

// Define input variables
VAR_INPUT
	// l'angle de la voiture par rapport à la route
    angleToTrackAxis : REAL;
    // la position de la voiture sur la route
    trackPosition : REAL;
    // la direction (différence entre capteur avant droite et avant gauche)
    direction : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
	// La direction que doit prendre la voiture
    steer : REAL;
END_VAR

// Fuzzify input variable 'angleToTrackAxis'
FUZZIFY angleToTrackAxis
    TERM angle_left := (-0.5, 1) (0, 0);
    TERM angle_mid := (-0.5, 0) (0,1) (0.5, 0);
    TERM angle_right := (0, 0) (0.5,1);
END_FUZZIFY

// Fuzzify input variable 'direction'
FUZZIFY direction
    TERM dir_left := (-50.0, 1)(-20,1)(-10, 0);
    TERM dir_left_mid := (-20,0)(-10,1)(0,0);
    TERM dir_straight := (-10, 0) (0,1) (10, 0);
    TERM dir_right_mid := (0,0)(10,1)(20,0);
    TERM dir_right := (10, 0)(20,1) (50.0,1);
END_FUZZIFY

// Fuzzify input variable 'trackPosition' distance du milieu
FUZZIFY trackPosition
	TERM track_out_right := (-2, 1)(-1.1,1)(-0.9,0);
    TERM track_right := (-1.1,0)(-0.9,1) (-0.7, 1)(-0.1,0);
    TERM track_mid := (-0.7,0)(-0.1,1)(0,1)(0.1,1)(0.7,0);
    TERM track_left := (0.1,0)(0.7,1)(0.9,1)(1.1,0);
    TERM track_out_left := (0.9,0)(1.1,1)(2,1);
END_FUZZIFY


DEFUZZIFY steer
	TERM steer_right := -0.9;
    TERM steer_right_soft := -0.3;
    TERM steer_right_very_soft := -0.2;
    TERM steer_straight := 0;
    TERM steer_left_very_soft := 0.2;
    TERM steer_left_soft := 0.3; 
    TERM steer_left := 0.9;    
    
    // Centre de gravité pour singletons
    METHOD : COGS;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

	// Règle 1 :
	// Si la voiture est au milieu, alors elle continue tout droit.
	// Utile dans les lignes droites et permet de ne pas tourner dans un 
	// sens si le virage est dans l'autre 
    RULE 1 : IF trackPosition IS track_mid 
             THEN steer IS steer_straight;    

    // Règles 2 et 3 :       
    // Si ligne droite est un peu décalée, se remettre au milieu, virage très soft
    RULE 2 : IF trackPosition IS track_left
             THEN steer IS steer_right_very_soft;
             
    RULE 3 : IF trackPosition IS track_right
             THEN steer IS steer_left_very_soft;
                 
    // Règles 4 et 5 :
    // Si la voiture n'a pas la bonne direction par rapport à la route, adapte sa 
    // direction. Permet de rendre le virage moins crispé / moins sacadé. Virage soft
    RULE 4 : IF angleToTrackAxis IS angle_left AND trackPosition IS track_mid
             THEN steer IS steer_right_soft;    
    
    RULE 5 : IF angleToTrackAxis IS angle_right AND trackPosition IS track_mid
             THEN steer IS steer_left_soft;             
             
	// Règles 6 et 7 :
	// Si la voiture est à l'extérieur de la route, à la limite de sortir la direction
	// doit être plus nette. Virage soft
    RULE 6 : IF trackPosition IS track_out_right
    		THEN steer IS steer_left;
   
    RULE 7 : IF trackPosition IS track_out_left
    		THEN steer IS steer_right;    		
 	
 	// Règles 8 et 9 :
 	// Virage léger ou anticipation d'un virage au loin. Permet de détecter à l'avance
 	// un virage. Virage très soft.
	RULE 8 : IF direction IS dir_left_mid
			 THEN steer is steer_left_very_soft;
	
	RULE 9 : IF direction is dir_right_mid
			 THEN steer is steer_right_very_soft;
			 
	// Règles 10 et 11 :
	// Si le virage est plus marqué, nous tournons d'avantage, cela nous permet
	// également de rester légèrement sur l'intérieur du virage. Virage soft.
	RULE 10 : IF direction IS dir_left
			 THEN steer is steer_left_soft;
	
	RULE 11 : IF direction is dir_right
			 THEN steer is steer_right_soft;

	// Règles 12 et 13
	// Permet de rester à l'intérieur d'un virage au maximum et permet de prendre le virage
	// de manière juste pour garder une bonne vitesse à la sortie. Virage accentué.
	RULE 12 : IF direction IS dir_left_mid and trackPosition is track_left
			 THEN steer is steer_left;
	
	RULE 13 : IF direction is dir_right_mid and trackPosition is track_right
			 THEN steer is steer_right;    		
    
END_RULEBLOCK

END_FUNCTION_BLOCK
